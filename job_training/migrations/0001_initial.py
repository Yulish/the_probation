# Generated by Django 5.2.6 on 2025-09-29 15:49

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Coords',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('latitude', models.FloatField(help_text='Широта в градусах', verbose_name='Широта')),
                ('longitude', models.FloatField(help_text='Долгота в градусах', verbose_name='Долгота')),
                ('height', models.IntegerField(help_text='Высота в метрах', verbose_name='Высота')),
            ],
            options={
                'verbose_name': 'Координаты',
                'verbose_name_plural': 'Координаты',
            },
        ),
        migrations.CreateModel(
            name='Image',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.TextField(verbose_name='Название файла')),
                ('data', models.BinaryField(blank=True, null=True, verbose_name='Данные изображения')),
                ('added_at', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Дата добавления')),
            ],
            options={
                'verbose_name': 'Изображение',
                'verbose_name_plural': 'Изображения',
            },
        ),
        migrations.CreateModel(
            name='PerevalLevel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('winter', models.CharField(blank=True, max_length=10, null=True, verbose_name='Зима')),
                ('summer', models.CharField(blank=True, max_length=10, null=True, verbose_name='Лето')),
                ('autumn', models.CharField(blank=True, max_length=10, null=True, verbose_name='Осень')),
                ('spring', models.CharField(blank=True, max_length=10, null=True, verbose_name='Весна')),
            ],
            options={
                'verbose_name': 'Уровень сложности',
                'verbose_name_plural': 'Уровни сложности',
            },
        ),
        migrations.CreateModel(
            name='Users',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='Email')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'swappable': 'AUTH_USER_MODEL',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='PerevalAdded',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('beautyTitle', models.TextField(help_text='Красивое название перевала', verbose_name='Красивое название')),
                ('title', models.TextField(help_text='Основное название перевала', verbose_name='Название')),
                ('other_titles', models.TextField(blank=True, help_text='Альтернативные названия', null=True, verbose_name='Другие названия')),
                ('connect', models.TextField(blank=True, help_text='Информация о связи/доступе', null=True, verbose_name='Связь')),
                ('add_time', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Время добавления')),
                ('status', models.CharField(choices=[('new', 'Новый'), ('pending', 'На рассмотрении'), ('accepted', 'Принят'), ('rejected', 'Отклонён')], default='new', max_length=10, verbose_name='Статус модерации')),
                ('moderated_at', models.DateTimeField(blank=True, null=True, verbose_name='Время модерации')),
                ('coord', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='perevals', to='job_training.coords', verbose_name='Координаты')),
                ('moderated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='moderated_perevals', to=settings.AUTH_USER_MODEL, verbose_name='Модератор')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='perevals', to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
                ('level', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='pereval', to='job_training.perevallevel', verbose_name='Уровни сложности')),
            ],
            options={
                'verbose_name': 'Перевал',
                'verbose_name_plural': 'Перевалы',
            },
        ),
        migrations.CreateModel(
            name='PerevalImages',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pereval_images', to='job_training.image')),
                ('pereval', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pereval_images', to='job_training.perevaladded')),
            ],
            options={
                'verbose_name': 'Связь перевал-изображение',
                'verbose_name_plural': 'Связи перевал-изображение',
                'unique_together': {('pereval', 'image')},
            },
        ),
    ]
